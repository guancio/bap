addr 0x22 @asm "addl   $0x1,-0x8(%rbp)"
label pc_0x22
t_90:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_90:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_90:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_90:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_90:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x24 @asm "clc    "
label pc_0x24
t_91:u32 = R_ESI:u32
R_ESI:u32 = R_ESI:u32 - 1:u32
R_AF:bool = 0x10:u32 == (0x10:u32 & (R_ESI:u32 ^ t_91:u32 ^ 1:u32))
R_OF:bool = high:bool((t_91:u32 ^ 1:u32) & (t_91:u32 ^ R_ESI:u32))
R_PF:bool =
  ~low:bool(R_ESI:u32 >> 7:u32 ^ R_ESI:u32 >> 6:u32 ^ R_ESI:u32 >> 5:u32 ^
            R_ESI:u32 >> 4:u32 ^ R_ESI:u32 >> 3:u32 ^ R_ESI:u32 >> 2:u32 ^
            R_ESI:u32 >> 1:u32 ^ R_ESI:u32)
R_SF:bool = high:bool(R_ESI:u32)
R_ZF:bool = 0:u32 == R_ESI:u32
addr 0x25 @asm "add    %ecx,0x508df845(%rbx)"
label pc_0x25
t_92:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_92:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_92:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_92:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_92:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x27 @asm "rex.RB clc    "
label pc_0x27
t_93:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_93:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_93:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_93:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_93:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x29 @asm "lea    0x1(%rax),%edx"
label pc_0x29
t_94:u32 = R_ECX:u32
R_ECX:u32 = R_ECX:u32 + 1:u32
R_AF:bool = 0x10:u32 == (0x10:u32 & (R_ECX:u32 ^ t_94:u32 ^ 1:u32))
R_OF:bool = high:bool((t_94:u32 ^ -2:u32) & (t_94:u32 ^ R_ECX:u32))
R_PF:bool =
  ~low:bool(R_ECX:u32 >> 7:u32 ^ R_ECX:u32 >> 6:u32 ^ R_ECX:u32 >> 5:u32 ^
            R_ECX:u32 >> 4:u32 ^ R_ECX:u32 >> 3:u32 ^ R_ECX:u32 >> 2:u32 ^
            R_ECX:u32 >> 1:u32 ^ R_ECX:u32)
R_SF:bool = high:bool(R_ECX:u32)
R_ZF:bool = 0:u32 == R_ECX:u32
addr 0x2a @asm "push   %rax"
label pc_0x2a
T_32t0_95:u32 = R_EAX:u32
T_32t3_98:u32 = R_ESP:u32
T_32t2_97:u32 = T_32t3_98:u32 - 4:u32
R_ESP:u32 = T_32t2_97:u32
mem:?u32 = mem:?u32 with [T_32t2_97:u32, e_little]:u32 = T_32t0_95:u32
addr 0x2b @asm "add    %ecx,-0x3f7c07bb(%rbx)"
label pc_0x2b
T_32t5:u32 = R_EBX:u32
T_32t4:u32 = T_32t5:u32 + 0xc083f845:u32
T_32t2_101:u32 = mem:?u32[T_32t4:u32, e_little]:u32
T_32t1_100:u32 = R_ECX:u32
T_32t0_99:u32 = T_32t2_101:u32 + T_32t1_100:u32
mem:?u32 = mem:?u32 with [T_32t4:u32, e_little]:u32 = T_32t0_99:u32
/*eflags thunk: add*/
T_0:u32 = T_32t2_101:u32 + T_32t1_100:u32
R_CF:bool = T_0:u32 < T_32t2_101:u32
T_1:u8 = low:u8(T_0:u32)
R_PF:bool =
  ~low:bool(T_1:u8 >> 7:u8 ^ T_1:u8 >> 6:u8 ^
            (T_1:u8 >> 5:u8 ^ T_1:u8 >> 4:u8) ^
            (T_1:u8 >> 3:u8 ^ T_1:u8 >> 2:u8 ^ (T_1:u8 >> 1:u8 ^ T_1:u8)))
R_AF:bool =
  1:u32 == (0x10:u32 & (T_0:u32 ^ (T_32t2_101:u32 ^ T_32t1_100:u32)))
R_ZF:bool = T_0:u32 == 0:u32
R_SF:bool = 1:u32 == (1:u32 & T_0:u32 >> 0x1f:u32)
R_OF:bool =
  1:u32 ==
  (1:u32 &
  ((T_32t2_101:u32 ^ (T_32t1_100:u32 ^ -1:u32)) & (T_32t2_101:u32 ^ T_0:u32)) >>
  0x1f:u32)
addr 0x31 @asm "add    %ecx,(%rdi)"
label pc_0x31
t_107:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_107:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_107:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_107:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_107:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x33 @asm "scas   %es:(%rdi),%eax"
label pc_0x33
t_108:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_108:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_108:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_108:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_108:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x35 @asm "mov    %eax,-0x4(%rbp)"
label pc_0x35
t_109:u8 = mem:?u32[R_EAX:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EAX:u32, e_little]:u8 =
  mem:?u32[R_EAX:u32, e_little]:u8 + low:u8(R_EAX:u32)
R_CF:bool = mem:?u32[R_EAX:u32, e_little]:u8 < t_109:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EAX:u32, e_little]:u8 ^ t_109:u8 ^ low:u8(R_EAX:u32)))
R_OF:bool =
  high:bool((t_109:u8 ^ ~low:u8(R_EAX:u32)) &
            (t_109:u8 ^ mem:?u32[R_EAX:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EAX:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EAX:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EAX:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EAX:u32, e_little]:u8
addr 0x37 @asm "cld    "
label pc_0x37
t_110:u8 = mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8
mem:?u32 =
  mem:?u32 with [R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 =
  mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 + low:u8(R_ECX:u32)
R_CF:bool = mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 < t_110:u8
R_AF:bool =
  0x10:u8 ==
  (0x10:u8 &
  (mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 ^ t_110:u8 ^
  low:u8(R_ECX:u32)))
R_OF:bool =
  high:bool((t_110:u8 ^ ~low:u8(R_ECX:u32)) &
            (t_110:u8 ^ mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8))
R_PF:bool =
  ~low:bool(mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 7:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 6:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 5:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 4:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 3:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 2:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8 >> 1:u8 ^
            mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8)
R_SF:bool = high:bool(mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8)
R_ZF:bool = 0:u8 == mem:?u32[R_EBX:u32 + 0x453bfc45:u32, e_little]:u8
addr 0x3d @asm "in     (%dx),%al"
label pc_0x3d
T_16t3:u16 = low:u16(R_EDX:u32)
T_32t2_113:u32 = pad:u32(T_16t3:u16)
special "Unknown: Dirty"
T_8t4:u8 = low:u8(T_32t1_112:u32)
R_EAX:u32 = R_EAX:u32 & 0xffffff00:u32 | pad:u32(T_8t4:u8)

goal:bool = mem:?u32[R_EBP + -8:u32, e_little]:u32 $>= 0:u32